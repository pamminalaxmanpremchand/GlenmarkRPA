<Activity mc:Ignorable="sap sap2010" x:Class="Test" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConnectionString" Type="InArgument(x:String)" />
    <x:Property Name="in_DatabaseName" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(x:String)" />
    <x:Property Name="In_PlantID" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Test_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>MongoDB.Bson</x:String>
      <x:String>MongoDB.Driver</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>MongoDB.Bson</AssemblyReference>
      <AssemblyReference>MongoDB.Driver</AssemblyReference>
      <AssemblyReference>MongoDB.Driver.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>net45.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Test" sap:VirtualizedContainerService.HintSize="634,637" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="StrMachineName" />
      <Variable x:TypeArguments="x:String" Name="IntObjectID" />
      <Variable x:TypeArguments="x:String" Name="StrPlantName" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 260,107.5 260,179 290,179</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">290,138.5</av:Point>
          <av:Size x:Key="ShapeSize">200,81</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap:VirtualizedContainerService.HintSize="496,1654" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="StrPlantID" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,181" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[Environment.MachineName]" />
        <Assign sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[StrMachineName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Environment.MachineName]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xD;&#xA;// Define variables (use UiPath's Arguments panel to pass these variables)&#xD;&#xA;string connectionString = StrconnectionString; // MongoDB connection string&#xD;&#xA;string databaseName = StrDataBaseName;                         // Database name&#xD;&#xA;string collectionName = &quot;CDS_Scheduler&quot;;               // Collection name&#xD;&#xA;string MachineName = StrMachineName;                   // Machine name (folder name to search)&#xD;&#xA;// Initialize MongoDB Client&#xD;&#xA;var client = new MongoClient(connectionString);&#xD;&#xA;Console.WriteLine(&quot;Connected&quot;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Get the database and collection&#xD;&#xA;var database = client.GetDatabase(databaseName);&#xD;&#xA;var collection = database.GetCollection&lt;BsonDocument&gt;(collectionName);&#xD;&#xA;&#xD;&#xA;// Define a filter to search for the specific project folder name&#xD;&#xA;var filter = Builders&lt;BsonDocument&gt;.Filter.Eq(&quot;Name&quot;, MachineName);&#xD;&#xA;Console.WriteLine(&quot;Machine Name entered&quot;);&#xD;&#xA;Console.WriteLine(collection);&#xD;&#xA;// Find the document&#xD;&#xA;var result = collection.Find(filter).FirstOrDefault();&#xD;&#xA;&#xD;&#xA;Console.WriteLine(result);&#xD;&#xA;&#xD;&#xA;// If document is found, retrieve the ProjectFolderID&#xD;&#xA;if (result != null)&#xD;&#xA;{&#xD;&#xA;    // Assuming ProjectFolderID is of type int, adjust the type if necessary&#xD;&#xA;    var ObjectID = result[&quot;_id&quot;].AsObjectId.ToString();&#xD;&#xA;    &#xD;&#xA;    // Assign to UiPath output argument (you need to create an output argument in UiPath)&#xD;&#xA;    ObjectID_OutPut = ObjectID;&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;    // Handle case where the document is not found&#xD;&#xA;    throw new Exception(&quot;ID Not Found.&quot;);&#xD;&#xA;}&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,205" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="StrMachineName">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="StrMachineName" />
            </InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="ObjectID_OutPut">
              <VisualBasicReference x:TypeArguments="x:String" ExpressionText="IntObjectID" />
            </OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="StrconnectionString">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ConnectionString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="StrDataBaseName">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_DatabaseName" />
            </InArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,181" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[IntObjectID.ToString]" />
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="// Define variables (use UiPath's Arguments panel to pass these variables)&#xD;&#xA;string connectionString = StrConnectionString; // MongoDB connection string&#xD;&#xA;string databaseName = StrDatabaseName;                         // Database name&#xD;&#xA;string collectionName = &quot;CDS_ClientConfiguration&quot;;     // Collection name&#xD;&#xA;string SchedulerID = StrSchedulerID;                   // SchedulerID passed from UiPath&#xD;&#xA;&#xD;&#xA;// Initialize MongoDB Client&#xD;&#xA;var client = new MongoClient(connectionString);&#xD;&#xA;Console.WriteLine(&quot;Connected to MongoDB&quot;);&#xD;&#xA;&#xD;&#xA;// Get the database and collection&#xD;&#xA;var database = client.GetDatabase(databaseName);&#xD;&#xA;var collection = database.GetCollection&lt;BsonDocument&gt;(collectionName);&#xD;&#xA;&#xD;&#xA;// Define a filter to search for the specific SchedulerID&#xD;&#xA;var filter = Builders&lt;BsonDocument&gt;.Filter.Eq(&quot;SchedulerId&quot;, SchedulerID);&#xD;&#xA;Console.WriteLine(&quot;Scheduler ID entered&quot;);&#xD;&#xA;&#xD;&#xA;// Find the document&#xD;&#xA;var result = collection.Find(filter).FirstOrDefault();&#xD;&#xA;Console.WriteLine(result?.ToJson() ?? &quot;No document found for the given Scheduler ID&quot;);&#xD;&#xA;&#xD;&#xA;// If document is found, retrieve the fields you need&#xD;&#xA;if (result != null)&#xD;&#xA;{&#xD;&#xA;    // Fetch all required fields from the document&#xD;&#xA;    var PlantName = result[&quot;PlantName&quot;].AsString;&#xD;&#xA;&#xD;&#xA;    // Output values to UiPath output arguments&#xD;&#xA;    PlantName_OutPut = PlantName;&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;    // Handle case where the document is not found&#xD;&#xA;    throw new Exception(&quot;SchedulerID Not Found.&quot;);&#xD;&#xA;}&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,205" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="StrSchedulerID">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="IntObjectID" />
            </InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="PlantName_OutPut">
              <VisualBasicReference x:TypeArguments="x:String" ExpressionText="StrPlantName" />
            </OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="StrConnectionString">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ConnectionString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="StrDatabaseName">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_DatabaseName" />
            </InArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,181" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[StrPlantName]" />
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="// Define variables (use UiPath's Arguments panel to pass these variables)&#xD;&#xA;string connectionString = StrConnectionString; // MongoDB connection string&#xD;&#xA;string databaseName = StrDatabaseName;                         // Database name&#xD;&#xA;string collectionName = &quot;CDS_Plant&quot;;     // Collection name&#xD;&#xA;string PlantName = StrPlantName;                   // SchedulerID passed from UiPath&#xD;&#xA;&#xD;&#xA;// Initialize MongoDB Client&#xD;&#xA;var client = new MongoClient(connectionString);&#xD;&#xA;Console.WriteLine(&quot;Connected to MongoDB&quot;);&#xD;&#xA;&#xD;&#xA;// Get the database and collection&#xD;&#xA;var database = client.GetDatabase(databaseName);&#xD;&#xA;var collection = database.GetCollection&lt;BsonDocument&gt;(collectionName);&#xD;&#xA;&#xD;&#xA;// Define a filter to search for the specific SchedulerID&#xD;&#xA;var filter = Builders&lt;BsonDocument&gt;.Filter.Eq(&quot;PlantName&quot;, PlantName);&#xD;&#xA;Console.WriteLine(&quot;Plant Name entered&quot;);&#xD;&#xA;&#xD;&#xA;// Find the document&#xD;&#xA;var result = collection.Find(filter).FirstOrDefault();&#xD;&#xA;Console.WriteLine(result?.ToJson() ?? &quot;No document found for the given Plant Name&quot;);&#xD;&#xA;&#xD;&#xA;// If document is found, retrieve the fields you need&#xD;&#xA;if (result != null)&#xD;&#xA;{&#xD;&#xA;    // Fetch all required fields from the document&#xD;&#xA;    var PlantID = result[&quot;_id&quot;].AsObjectId.ToString();&#xD;&#xA;&#xD;&#xA;    // Output values to UiPath output arguments&#xD;&#xA;    PlantID_OutPut = PlantID;&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;    // Handle case where the document is not found&#xD;&#xA;    throw new Exception(&quot;PlantID not Found.&quot;);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;                " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,205" sap2010:WorkflowViewState.IdRef="InvokeCode_5" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="StrPlantName">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="StrPlantName" />
            </InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="PlantID_OutPut">
              <VisualBasicReference x:TypeArguments="x:String" ExpressionText="StrPlantID" />
            </OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="StrConnectionString">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ConnectionString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="StrDatabaseName">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_DatabaseName" />
            </InArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,181" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[StrPlantID]" />
        <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[In_PlantID]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[StrPlantID]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>