<Activity mc:Ignorable="sap sap2010" x:Class="test" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_BatchPickedDate" Type="InArgument(x:String)" />
    <x:Property Name="In_ProjectFolderID" Type="InArgument(x:String)" />
    <x:Property Name="In_SampleSetID" Type="InArgument(x:String)" />
    <x:Property Name="In_SampleSetName" Type="InArgument(x:String)" />
    <x:Property Name="In_LastResultID" Type="InArgument(x:String)" />
    <x:Property Name="In_Priority" Type="InArgument(x:String)" />
    <x:Property Name="In_ApproximateETA" Type="InArgument(x:String)" />
    <x:Property Name="In_IsROAbased" Type="InArgument(x:String)" />
    <x:Property Name="In_RobotName" Type="InArgument(x:String)" />
    <x:Property Name="In_Status" Type="InArgument(x:String)" />
    <x:Property Name="In_LastDateProcessed" Type="InArgument(x:String)" />
    <x:Property Name="In_PriorityRequest" Type="InArgument(x:String)" />
    <x:Property Name="In_PlantId" Type="InArgument(x:String)" />
    <x:Property Name="In_ProjectFolderName" Type="InArgument(x:String)" />
    <x:Property Name="In_ServiceType" Type="InArgument(x:String)" />
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_IntCount" Type="InArgument(x:Int32)" />
  </x:Members>
  <this:test.in_config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:test.in_config>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1000,955</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>test_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Activities.System.Text</x:String>
      <x:String>MongoDB.Bson</x:String>
      <x:String>MongoDB.Driver</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>MongoDB.Bson</AssemblyReference>
      <AssemblyReference>MongoDB.Driver.Core</AssemblyReference>
      <AssemblyReference>MongoDB.Driver</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>net45.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="test" sap:VirtualizedContainerService.HintSize="1010,890" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="BaseTime" />
      <Variable x:TypeArguments="x:TimeSpan" Name="AddedTime" />
      <Variable x:TypeArguments="s:DateTime" Name="UpdatedTime" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Height">853</x:Double>
        <x:Double x:Key="Width">976</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,209.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,209.5</av:Point>
          <av:Size x:Key="ShapeSize">200,81</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="InsertMongo" sap:VirtualizedContainerService.HintSize="654,4301" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Name="ProjectFolderOutPut" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="592,122" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[In_BatchPickedDate]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(In_BatchPickedDate is nothing ,"", In_BatchPickedDate)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="592,122" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[In_ProjectFolderName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(In_ProjectFolderName is nothing ,"", In_ProjectFolderName)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="592,122" sap2010:WorkflowViewState.IdRef="Assign_22">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[In_ProjectFolderID]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(In_ProjectFolderID is nothing ,"", In_ProjectFolderID)]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[In_ProjectFolderID.Contains(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="592,1068" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="516,790" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="454,705" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                <TryCatch.Try>
                  <Sequence sap:VirtualizedContainerService.HintSize="416,454" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="// Import necessary namespaces&#xD;&#xA;// Define variables (use UiPath's Arguments panel to pass these variables)&#xD;&#xA;    string connectionString = &quot;mongodb://localhost:27017&quot;;&#xD;&#xA;    string databaseName = &quot;local&quot;;&#xD;&#xA;    string collectionName = &quot;ProjectFolder&quot;;&#xD;&#xA;string projectFolderName = ProjectFolderName; // The folder name to search&#xD;&#xA;&#xD;&#xA;// Initialize MongoDB Client&#xD;&#xA;var client = new MongoClient(connectionString);&#xD;&#xA;&#xD;&#xA;// Get the database and collection&#xD;&#xA;var database = client.GetDatabase(databaseName);&#xD;&#xA;var collection = database.GetCollection&lt;BsonDocument&gt;(collectionName);&#xD;&#xA;&#xD;&#xA;// Define a filter to search for the specific project folder name&#xD;&#xA;var filter = Builders&lt;BsonDocument&gt;.Filter.Eq(&quot;ProjectFolderName&quot;, projectFolderName);&#xD;&#xA;&#xD;&#xA;// Find the document&#xD;&#xA;var result = collection.Find(filter).FirstOrDefault();&#xD;&#xA;&#xD;&#xA;// If document is found, retrieve the ProjectFolderID&#xD;&#xA;if (result != null)&#xD;&#xA;{&#xD;&#xA;    // Assuming ProjectFolderID is of type int, adjust type if necessary&#xD;&#xA;    var projectFolderID = result[&quot;ProjectFolderID&quot;].AsInt32;&#xD;&#xA;    &#xD;&#xA;    // Assign to UiPath output argument (you need to create an output argument in UiPath)&#xD;&#xA;    ProjectFolderID_Output = projectFolderID;&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;    // Handle case where document is not found&#xD;&#xA;    throw new Exception(&quot;Project folder not found.&quot;);&#xD;&#xA;}&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="354,205" sap2010:WorkflowViewState.IdRef="InvokeCode_6" Language="CSharp">
                      <ui:InvokeCode.Arguments>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="ProjectFolderID_Output">[ProjectFolderOutPut]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProjectFolderName">[In_ProjectFolderName]</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[ProjectFolderOutPut]" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="420,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Throw Exception="[new BusinessRuleException(&quot;ProjectFolderID not found&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
        <Sequence sap:VirtualizedContainerService.HintSize="592,2779" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_23">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_SampleSetID]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_SampleSetID is nothing ,"", In_SampleSetID)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_24">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_SampleSetName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_SampleSetName is nothing ,"", In_SampleSetName)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_25">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_LastResultID]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_LastResultID is nothing ,"", In_LastResultID)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_26">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_Priority]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_Priority is nothing ,"", In_Priority)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_27">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_ApproximateETA]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_ApproximateETA is nothing ,"", In_ApproximateETA)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_38">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[BaseTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[in_IntCount&gt;1]" sap:VirtualizedContainerService.HintSize="530,802" sap2010:WorkflowViewState.IdRef="If_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,190" sap2010:WorkflowViewState.IdRef="Sequence_22">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_35">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[In_ApproximateETA]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[now.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,434" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="Assign_36">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:TimeSpan">[AddedTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:TimeSpan">[TimeSpan.FromMinutes(in_IntCount * 5)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="Assign_39">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[UpdatedTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[BaseTime.Add(AddedTime)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_37">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[In_ApproximateETA]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[UpdatedTime.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_28">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_IsROAbased]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_IsROAbased is nothing ,"", In_IsROAbased)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_29">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_RobotName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_RobotName is nothing ,"", In_RobotName)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_30">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_Status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_Status is nothing ,"", In_Status)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_31">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_LastDateProcessed]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_LastDateProcessed is nothing ,"", In_LastDateProcessed)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_32">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_PriorityRequest]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_PriorityRequest is nothing ,"", In_PriorityRequest)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_33">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_PlantId]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_PlantId is nothing ,"", In_PlantId)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[In_ProjectFolderID.Contains(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="530,92" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="516,790" sap2010:WorkflowViewState.IdRef="Sequence_24">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="454,705" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="416,454" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="// Import necessary namespaces&#xA;// Define variables (use UiPath's Arguments panel to pass these variables)&#xA;    string connectionString = &quot;mongodb://localhost:27017&quot;;&#xA;    string databaseName = &quot;local&quot;;&#xA;    string collectionName = &quot;ProjectFolder&quot;;&#xA;string projectFolderName = ProjectFolderName; // The folder name to search&#xA;&#xA;// Initialize MongoDB Client&#xA;var client = new MongoClient(connectionString);&#xA;&#xA;// Get the database and collection&#xA;var database = client.GetDatabase(databaseName);&#xA;var collection = database.GetCollection&lt;BsonDocument&gt;(collectionName);&#xA;&#xA;// Define a filter to search for the specific project folder name&#xA;var filter = Builders&lt;BsonDocument&gt;.Filter.Eq(&quot;ProjectFolderName&quot;, projectFolderName);&#xA;&#xA;// Find the document&#xA;var result = collection.Find(filter).FirstOrDefault();&#xA;&#xA;// If document is found, retrieve the ProjectFolderID&#xA;if (result != null)&#xA;{&#xA;    // Assuming ProjectFolderID is of type int, adjust type if necessary&#xA;    var projectFolderID = result[&quot;ProjectFolderID&quot;].AsInt32;&#xA;    &#xA;    // Assign to UiPath output argument (you need to create an output argument in UiPath)&#xA;    ProjectFolderID_Output = projectFolderID;&#xA;}&#xA;else&#xA;{&#xA;    // Handle case where document is not found&#xA;    throw new Exception(&quot;Project folder not found.&quot;);&#xA;}&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="354,205" sap2010:WorkflowViewState.IdRef="InvokeCode_8" Language="CSharp">
                        <ui:InvokeCode.Arguments>
                          <OutArgument x:TypeArguments="x:Int32" x:Key="ProjectFolderID_Output">[ProjectFolderOutPut]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProjectFolderName">[In_ProjectFolderName]</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[ProjectFolderOutPut]" />
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="420,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Throw Exception="[new BusinessRuleException(&quot;ProjectFolderID not found&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="530,122" sap2010:WorkflowViewState.IdRef="Assign_34">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_ServiceType]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(In_ServiceType is nothing ,"", In_ServiceType)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;    string connectionString = &quot;mongodb://localhost:27017&quot;;&#xA;    string databaseName = &quot;local&quot;;&#xA;    string collectionName = &quot;PRODRE&quot;;&#xA;&#xA;    Console.WriteLine(&quot;Connecting to MongoDB...&quot;);&#xA;    var client = new MongoClient(connectionString);&#xA;    Console.WriteLine(&quot;Connected to MongoDB.&quot;);&#xA;&#xA;    var database = client.GetDatabase(databaseName);&#xA;    var collection = database.GetCollection&lt;BsonDocument&gt;(collectionName);&#xA;&#xA;    Console.WriteLine(&quot;Creating document...&quot;);&#xA;&#xA;    var document = new BsonDocument&#xA;    {&#xA;        { &quot;BatchedPickedDate&quot;, BatchedPickedDate},&#xA;&#x9;&#x9;{&quot;ProjectFolderID&quot;, ProjectFolderID},  // Ensure these match your argument names&#xA;        { &quot;SampleSetID&quot;, SampleSetID },&#xA;&#x9;&#x9;{ &quot;SampleSetName&quot;, SampleSetName},&#xA;&#x9;&#x9;{ &quot;LastResultID&quot;, LastResultID},&#xA;&#x9;&#x9;{ &quot;Priority&quot;, Priority},&#xA;&#x9;&#x9;{ &quot;ApproximateETA&quot;, ApproximateETA},&#xA;&#x9;&#x9;{ &quot;IsROAbased&quot;, IsROAbased},&#xA;&#x9;&#x9;{ &quot;RobotName&quot;, RobotName},&#xA;&#x9;&#x9;{ &quot;Status&quot;, Status},&#xA;&#x9;&#x9;{ &quot;LastDateProcessed&quot;, LastDateProcessed},&#xA;&#x9;&#x9;{ &quot;PriorityRequest&quot;, PriorityRequest},&#xA;&#x9;&#x9;{ &quot;PlantId&quot;, PlantId},&#xA;&#x9;&#x9;{ &quot;ProjectFolderName&quot;, ProjectFolderName},&#xA;&#x9;&#x9;{ &quot;ServiceType&quot;, ServiceType},&#xA;    };&#xA;&#xA;    Console.WriteLine(&quot;Inserting document...&quot;);&#xA;    collection.InsertOne(document);&#xA;    Console.WriteLine(&quot;Document inserted successfully.&quot;);&#xA;}&#xA;catch (MongoException mongoEx)&#xA;{&#xA;    throw new Exception(&quot;MongoDB error: &quot; + mongoEx.Message, mongoEx);&#xA;}&#xA;catch (Exception ex)&#xA;{&#xA;    throw new Exception(&quot;An error occurred: &quot; + ex.Message, ex);&#xA;}&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="530,188" sap2010:WorkflowViewState.IdRef="InvokeCode_7" Language="CSharp">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="BatchedPickedDate">[In_BatchPickedDate]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ProjectFolderID">[In_ProjectFolderID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="SampleSetID">[In_SampleSetID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="SampleSetName">[In_SampleSetName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="LastResultID">[In_LastResultID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Priority">[In_Priority]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ApproximateETA">[In_ApproximateETA]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="IsROAbased">[In_IsROAbased]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="RobotName">[In_RobotName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Status">[In_Status]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="LastDateProcessed">[In_LastDateProcessed]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="PriorityRequest">[In_PriorityRequest]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="PlantId">[In_PlantId]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ProjectFolderName">[In_ProjectFolderName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ServiceType">[In_ServiceType]</InArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
        </Sequence>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>